<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.irs.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.irs.pojo.Comment">
    <id column="c_id" jdbcType="INTEGER" property="cId" />
    <result column="u_id" jdbcType="INTEGER" property="uId" />
    <result column="p_id" jdbcType="INTEGER" property="pId" />
    <result column="c_content" jdbcType="VARCHAR" property="cContent" />
    <result column="R1" jdbcType="VARCHAR" property="r1" />
    <result column="R2" jdbcType="VARCHAR" property="r2" />
    <result column="c_createtime" jdbcType="VARCHAR" property="cCreatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    c_id, u_id, p_id, c_content, R1, R2, c_createtime
  </sql>
  <select id="selectByExample" parameterType="com.irs.pojo.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where c_id = #{cId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where c_id = #{cId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.irs.pojo.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.irs.pojo.Comment">
    insert into comment (c_id, u_id, p_id, 
      c_content, R1, R2, c_createtime
      )
    values (#{cId,jdbcType=INTEGER}, #{uId,jdbcType=INTEGER}, #{pId,jdbcType=INTEGER}, 
      #{cContent,jdbcType=VARCHAR}, #{r1,jdbcType=VARCHAR}, #{r2,jdbcType=VARCHAR}, #{cCreatetime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.irs.pojo.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cId != null">
        c_id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="pId != null">
        p_id,
      </if>
      <if test="cContent != null">
        c_content,
      </if>
      <if test="r1 != null">
        R1,
      </if>
      <if test="r2 != null">
        R2,
      </if>
      <if test="cCreatetime != null">
        c_createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cId != null">
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="pId != null">
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="cContent != null">
        #{cContent,jdbcType=VARCHAR},
      </if>
      <if test="r1 != null">
        #{r1,jdbcType=VARCHAR},
      </if>
      <if test="r2 != null">
        #{r2,jdbcType=VARCHAR},
      </if>
      <if test="cCreatetime != null">
        #{cCreatetime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.irs.pojo.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.uId != null">
        u_id = #{record.uId,jdbcType=INTEGER},
      </if>
      <if test="record.pId != null">
        p_id = #{record.pId,jdbcType=INTEGER},
      </if>
      <if test="record.cContent != null">
        c_content = #{record.cContent,jdbcType=VARCHAR},
      </if>
      <if test="record.r1 != null">
        R1 = #{record.r1,jdbcType=VARCHAR},
      </if>
      <if test="record.r2 != null">
        R2 = #{record.r2,jdbcType=VARCHAR},
      </if>
      <if test="record.cCreatetime != null">
        c_createtime = #{record.cCreatetime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set c_id = #{record.cId,jdbcType=INTEGER},
      u_id = #{record.uId,jdbcType=INTEGER},
      p_id = #{record.pId,jdbcType=INTEGER},
      c_content = #{record.cContent,jdbcType=VARCHAR},
      R1 = #{record.r1,jdbcType=VARCHAR},
      R2 = #{record.r2,jdbcType=VARCHAR},
      c_createtime = #{record.cCreatetime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.irs.pojo.Comment">
    update comment
    <set>
      <if test="uId != null">
        u_id = #{uId,jdbcType=INTEGER},
      </if>
      <if test="pId != null">
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="cContent != null">
        c_content = #{cContent,jdbcType=VARCHAR},
      </if>
      <if test="r1 != null">
        R1 = #{r1,jdbcType=VARCHAR},
      </if>
      <if test="r2 != null">
        R2 = #{r2,jdbcType=VARCHAR},
      </if>
      <if test="cCreatetime != null">
        c_createtime = #{cCreatetime,jdbcType=VARCHAR},
      </if>
    </set>
    where c_id = #{cId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.irs.pojo.Comment">
    update comment
    set u_id = #{uId,jdbcType=INTEGER},
      p_id = #{pId,jdbcType=INTEGER},
      c_content = #{cContent,jdbcType=VARCHAR},
      R1 = #{r1,jdbcType=VARCHAR},
      R2 = #{r2,jdbcType=VARCHAR},
      c_createtime = #{cCreatetime,jdbcType=VARCHAR}
    where c_id = #{cId,jdbcType=INTEGER}
  </update>
</mapper>